{"body": "<div class=\"section\" id=\"icallsv-package\">\n<h1>iCallSV package<a class=\"headerlink\" href=\"#icallsv-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-iCallSV.FilterDellyCalls\">\n<span id=\"icallsv-filterdellycalls-module\"></span><h2>iCallSV.FilterDellyCalls module<a class=\"headerlink\" href=\"#module-iCallSV.FilterDellyCalls\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"filterdellycalls\">\n<h3>FilterDellyCalls<a class=\"headerlink\" href=\"#filterdellycalls\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will filter calls made by Delly which are in a VCF format</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.FilterDellyCalls.GetCaseFlag\">\n<code class=\"descclassname\">iCallSV.FilterDellyCalls.</code><code class=\"descname\">GetCaseFlag</code><span class=\"sig-paren\">(</span><em>caseDR</em>, <em>caseDV</em>, <em>preciseFlag</em>, <em>caseRR</em>, <em>caseRV</em>, <em>caseAltFreq</em>, <em>caseTotalCount</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/FilterDellyCalls/#GetCaseFlag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.FilterDellyCalls.GetCaseFlag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">check</span> <span class=\"pre\">if</span> <span class=\"pre\">the</span> <span class=\"pre\">case</span> <span class=\"pre\">sample</span> <span class=\"pre\">passes</span> <span class=\"pre\">or</span> <span class=\"pre\">not</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>caseDR</strong> (<em>int</em>) &#8211; int representing number of reference reads for case reported by delly</li>\n<li><strong>caseDV</strong> (<em>int</em>) &#8211; int representing number of variant reads for case reported by delly</li>\n<li><strong>preciseFlag</strong> (<em>str</em>) &#8211; str representing if an event is precise or imprecise</li>\n<li><strong>caseRR</strong> (<em>int</em>) &#8211; int representing number of split reference reads for case reported by delly</li>\n<li><strong>caseRV</strong> (<em>int</em>) &#8211; int representing number of split variant reads for case reported by delly</li>\n<li><strong>caseAltFreq</strong> (<em>float</em>) &#8211; float representing altratio threshold for case</li>\n<li><strong>caseTotalCount</strong> (<em>int</em>) &#8211; int repeseting readcount threshold for case</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.FilterDellyCalls.GetControlFlag\">\n<code class=\"descclassname\">iCallSV.FilterDellyCalls.</code><code class=\"descname\">GetControlFlag</code><span class=\"sig-paren\">(</span><em>controlDR</em>, <em>controlDV</em>, <em>preciseFlag</em>, <em>controlRR</em>, <em>controlRV</em>, <em>controlAltFreq</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/FilterDellyCalls/#GetControlFlag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.FilterDellyCalls.GetControlFlag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">check</span> <span class=\"pre\">if</span> <span class=\"pre\">the</span> <span class=\"pre\">control</span> <span class=\"pre\">sample</span> <span class=\"pre\">passes</span> <span class=\"pre\">or</span> <span class=\"pre\">not</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>controlDR</strong> (<em>int</em>) &#8211; int representing number of reference reads for control reported by delly</li>\n<li><strong>controlDV</strong> (<em>int</em>) &#8211; int representing number of variant reads for control reported by delly</li>\n<li><strong>preciseFlag</strong> (<em>str</em>) &#8211; str representing if an event is precise or imprecise</li>\n<li><strong>controlRR</strong> (<em>int</em>) &#8211; int representing number of split reference reads for control reported by delly</li>\n<li><strong>controlRV</strong> (<em>int</em>) &#8211; int representing number of split variant reads for control reported by delly</li>\n<li><strong>controlAltFreq</strong> (<em>float</em>) &#8211; float representing altratio threshold for control</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.FilterDellyCalls.GetFilteredRecords\">\n<code class=\"descclassname\">iCallSV.FilterDellyCalls.</code><code class=\"descname\">GetFilteredRecords</code><span class=\"sig-paren\">(</span><em>dellyVarialbles</em>, <em>thresholdVariables</em>, <em>hotspotDict</em>, <em>blacklist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/FilterDellyCalls/#GetFilteredRecords\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.FilterDellyCalls.GetFilteredRecords\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">Filter</span> <span class=\"pre\">one</span> <span class=\"pre\">record</span> <span class=\"pre\">at</span> <span class=\"pre\">a</span> <span class=\"pre\">time</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>dellyVariables</strong> (<em>str</em>) &#8211; str having all delly variables separated by &#8221;,&#8221;</li>\n<li><strong>thresholdVariables</strong> (<em>str</em>) &#8211; str having all delly threshold variables separated by &#8221;,&#8221;</li>\n<li><strong>hotspotDict</strong> (<em>dict</em>) &#8211; A dict containing hotspot regions</li>\n<li><strong>blacklist</strong> (<em>list</em>) &#8211; A list containing blacklist regions</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.FilterDellyCalls.run\">\n<code class=\"descclassname\">iCallSV.FilterDellyCalls.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>inputVcf</em>, <em>outputDir</em>, <em>controlId</em>, <em>caseID</em>, <em>hotspotFile</em>, <em>blacklistFile</em>, <em>svlength</em>, <em>mapq</em>, <em>mapqHotspot</em>, <em>caseAltFreqHotspot</em>, <em>caseTotalCountHotspot</em>, <em>controlAltFreqHotspot</em>, <em>caseAltFreq</em>, <em>caseTotalCount</em>, <em>controlAltFreq</em>, <em>peSupport</em>, <em>srSupport</em>, <em>peSupportHotspot</em>, <em>srSupportHotspot</em>, <em>peSupportCase</em>, <em>srSupportCase</em>, <em>peSupportHotspotCase</em>, <em>srSupportHotspotCase</em>, <em>peSupportControl</em>, <em>srSupportControl</em>, <em>peSupportHotspotControl</em>, <em>srSupportHotspotControl</em>, <em>verbose</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/FilterDellyCalls/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.FilterDellyCalls.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">``</span></a>main:<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">``</span></a>Filter calls made by Delly which are in a VCF format</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>inputVcf</strong> (<em>str</em>) &#8211; Input VCF file name with path</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; Output directory</li>\n<li><strong>controlId</strong> (<em>str</em>) &#8211; Control Sample ID (Should be part of Sample Name in VCF)</li>\n<li><strong>caseID</strong> (<em>str</em>) &#8211; Case Sample ID (Should be part of Sample Name in VCF)</li>\n<li><strong>hospotFile</strong> (<em>str</em>) &#8211; List of Genes that have Hotspot Structural Variants (Tab-delimited Format without header:chr    start    end    geneName).</li>\n<li><strong>blacklistFile</strong> (<em>str</em>) &#8211; List of Genes that have blacklist of Structural Variants (Tab-delimited Format without header:chr    start1    chr2     start2; where chr1==chr2, end==start2).</li>\n<li><strong>caseAltFreq</strong> (<em>float</em>) &#8211; Alternate Allele Frequency threshold for case</li>\n<li><strong>caseTotalCount</strong> (<em>int</em>) &#8211; Total ReadCount threshold for case</li>\n<li><strong>ccontrolAltFreq</strong> (<em>flaot</em>) &#8211; Alternate Allele Frequency threshold for control</li>\n<li><strong>peSupport</strong> (<em>int</em>) &#8211; overall pair-end read support threshold for the event</li>\n<li><strong>srSupport</strong> (<em>int</em>) &#8211; overall split-reads support threshold for the event</li>\n<li><strong>peSupportHotspot</strong> (<em>int</em>) &#8211; overall pair-end read support threshold for the event in hot-spot region</li>\n<li><strong>srSupportHotspot</strong> (<em>int</em>) &#8211; overall split-reads support threshold for the event in hot-spot region</li>\n<li><strong>peSupportCase</strong> (<em>int</em>) &#8211; pair-end read support threshold for the event in the Case sample</li>\n<li><strong>srSupportCase</strong> (<em>int</em>) &#8211; split-reads support threshold for the event in the Case sample</li>\n<li><strong>peSupportHotspotCase</strong> (<em>int</em>) &#8211; pair-end read support threshold for the event in hot-spot region for the Case sample</li>\n<li><strong>srSupportHotspotCase</strong> (<em>int</em>) &#8211; split-reads support threshold for the event in hot-spot region for the Case sample</li>\n<li><strong>peSupportControl</strong> (<em>int</em>) &#8211; pair-end read support threshold for the event in the Control sample</li>\n<li><strong>srSupportControl</strong> (<em>int</em>) &#8211; split-reads support threshold for the event in the Control sample</li>\n<li><strong>peSupportHotspotControl</strong> (<em>int</em>) &#8211; pair-end read support threshold for the event in hot-spot region for the Control sample</li>\n<li><strong>srSupportHotspotControl</strong> (<em>int</em>) &#8211; split-reads support threshold for the event in hot-spot region for the Control sample</li>\n<li><strong>svlength</strong> (<em>int</em>) &#8211; length of the structural variants</li>\n<li><strong>mapq</strong> (<em>int</em>) &#8211; overall mapping quality</li>\n<li><strong>mapqHotspot</strong> (<em>int</em>) &#8211; mapping quality for hot-spots</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A str name of filtered vcf file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.Run_Delly\">\n<span id=\"icallsv-run-delly-module\"></span><h2>iCallSV.Run_Delly module<a class=\"headerlink\" href=\"#module-iCallSV.Run_Delly\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"run-delly\">\n<h3>Run_Delly<a class=\"headerlink\" href=\"#run-delly\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">Runs the delly program on case and control bam file to give its results</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.Run_Delly.run\">\n<code class=\"descclassname\">iCallSV.Run_Delly.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>delly</em>, <em>version</em>, <em>bcftools</em>, <em>analysisType</em>, <em>reference</em>, <em>controlBam</em>, <em>caseBam</em>, <em>caseId</em>, <em>mapq</em>, <em>excludeRegions</em>, <em>outputdir</em>, <em>verbose</em>, <em>debug</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/Run_Delly/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.Run_Delly.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will Runs the delly program on case and control bam file to give its\nresults.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>delly</strong> (<em>str</em>) &#8211; Path to delly executables (0.7.3 or above)</li>\n<li><strong>bcftools</strong> (<em>str</em>) &#8211; Path to bcftools executables (1.3.1 or above)</li>\n<li><strong>type</strong> (<em>str</em>) &#8211; What ot run in delly, DEL:Deletion, DUP: Duplication,TRA:Translocation, INV:Inversion</li>\n<li><strong>reference</strong> (<em>str</em>) &#8211; Reference Genome that was used to align the reads.</li>\n<li><strong>controlBam</strong> (<em>str</em>) &#8211; Path to control/normal bam file</li>\n<li><strong>caseBam</strong> (<em>str</em>) &#8211; Path to case/tumor bam file</li>\n<li><strong>controlID</strong> (<em>str</em>) &#8211; Id of the control/normal sample</li>\n<li><strong>caseID</strong> (<em>str</em>) &#8211; Id of the case/tumor sample</li>\n<li><strong>mapq</strong> (<em>int</em>) &#8211; mapping quality cutoff for delly</li>\n<li><strong>excludeRegions</strong> (<em>str</em>) &#8211; Regions to be excluded for calling structural variation.</li>\n<li><strong>outputdir</strong> (<em>str</em>) &#8211; directory for the output of delly</li>\n<li><strong>debug</strong> (<em>bool</em>) &#8211; If you just wish to test what we will do</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">str of the output vcf</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.Run_iAnnotateSV\">\n<span id=\"icallsv-run-iannotatesv-module\"></span><h2>iCallSV.Run_iAnnotateSV module<a class=\"headerlink\" href=\"#module-iCallSV.Run_iAnnotateSV\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"run-iannotate\">\n<h3>Run_iAnnotate<a class=\"headerlink\" href=\"#run-iannotate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will run iAnnotateSV package</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.Run_iAnnotateSV.run\">\n<code class=\"descclassname\">iCallSV.Run_iAnnotateSV.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>python</em>, <em>iAnnotateSV</em>, <em>build</em>, <em>distance</em>, <em>canonicalTranscriptFile</em>, <em>uniprotFile</em>, <em>cosmicFile</em>, <em>repeatregionFile</em>, <em>dgvFile</em>, <em>inputTabFile</em>, <em>outputPrefix</em>, <em>outputDir</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/Run_iAnnotateSV/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.Run_iAnnotateSV.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This module will run iAnnotateSV package.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>python</strong> (<em>str</em>) &#8211; Location for the python executable.</li>\n<li><strong>iAnnotateSV</strong> (<em>str</em>) &#8211; Location of the wrapper iAnnotateSV package (iAnnotateSV.py)</li>\n<li><strong>build</strong> (<em>str</em>) &#8211; Which human reference file to be used, hg18,hg19 or hg38</li>\n<li><strong>inputTabFile</strong> (<em>str</em>) &#8211; Tab-Delimited Input FIle compatible with iAnnotateSV package.</li>\n<li><strong>outputPrefix</strong> (<em>str</em>) &#8211; Prefix of the output files/DIR with Annotations and images</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; Name of the output directory where the outputPrefix will be written</li>\n<li><strong>uniprotFile</strong> (<em>str</em>) &#8211; Location for ucsc uniprot file</li>\n<li><strong>cosmicFile</strong> (<em>str</em>) &#8211; Location for cosmic census file</li>\n<li><strong>repeatregionFile</strong> (<em>str</em>) &#8211; Location for repeat region file</li>\n<li><strong>dgvFile</strong> (<em>str</em>) &#8211; Location for database of Genomic Variants file</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">str of the output file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.Run_samblaster\">\n<span id=\"icallsv-run-samblaster-module\"></span><h2>iCallSV.Run_samblaster module<a class=\"headerlink\" href=\"#module-iCallSV.Run_samblaster\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"run-samblaster\">\n<h3>Run_samblaster<a class=\"headerlink\" href=\"#run-samblaster\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will run samblaster for extracting discordant and spit reads in sam format</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.Run_samblaster.run\">\n<code class=\"descclassname\">iCallSV.Run_samblaster.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>samtools</em>, <em>samblaster</em>, <em>bamFile</em>, <em>discordantFileName</em>, <em>splitFileName</em>, <em>outputDir</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/Run_samblaster/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.Run_samblaster.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.Run_targetSeqView\">\n<span id=\"icallsv-run-targetseqview-module\"></span><h2>iCallSV.Run_targetSeqView module<a class=\"headerlink\" href=\"#module-iCallSV.Run_targetSeqView\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"run-targetseqview\">\n<h3>Run_targetSeqView<a class=\"headerlink\" href=\"#run-targetseqview\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will run targetSeqView</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.Run_targetSeqView.run\">\n<code class=\"descclassname\">iCallSV.Run_targetSeqView.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>RLocation</em>, <em>targetSeqView</em>, <em>nodes</em>, <em>bamFilePath</em>, <em>svFile</em>, <em>build</em>, <em>readLength</em>, <em>outputDir</em>, <em>outsvFileName</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/Run_targetSeqView/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.Run_targetSeqView.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This module will run targetSeqView.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>RLocation</strong> (<em>str</em>) &#8211; Location of the R executable (&gt;3.1.2).</li>\n<li><strong>targetSeqView</strong> (<em>str</em>) &#8211; Location of R script that will run tragetSeqView</li>\n<li><strong>nodes</strong> (<em>int</em>) &#8211; Number of parallel nodes for running targetSeqView</li>\n<li><strong>bamFile</strong> (<em>str</em>) &#8211; Location of the bamFile which has the  structural variant events.</li>\n<li><strong>svFile</strong> (<em>str</em>) &#8211; targetSeqView compatible input structural variant file.</li>\n<li><strong>build</strong> (<em>str</em>) &#8211; Which human reference file to be used, hg18,hg19 or hg38</li>\n<li><strong>readLength</strong> (<em>int</em>) &#8211; Sequencing Read Length (101)</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; Directory for output files</li>\n<li><strong>outsvFile</strong> (<em>str</em>) &#8211; Name of the output structural variant file that has added confidence score to it.</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">str of the output file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.checkBlackList\">\n<span id=\"icallsv-checkblacklist-module\"></span><h2>iCallSV.checkBlackList module<a class=\"headerlink\" href=\"#module-iCallSV.checkBlackList\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"checkblacklist\">\n<h3>checkBlackList<a class=\"headerlink\" href=\"#checkblacklist\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will read the Black List file and tell if and event is blacklisted or not</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.checkBlackList.CheckIfItIsBlacklisted\">\n<code class=\"descclassname\">iCallSV.checkBlackList.</code><code class=\"descname\">CheckIfItIsBlacklisted</code><span class=\"sig-paren\">(</span><em>chr1</em>, <em>start1</em>, <em>chr2</em>, <em>start2</em>, <em>blacklist</em>, <em>extention</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkBlackList/#CheckIfItIsBlacklisted\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkBlackList.CheckIfItIsBlacklisted\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if coordinate are present in the <code class=\"docutils literal\"><span class=\"pre\">blacklist</span> <span class=\"pre\">region</span> <span class=\"pre\">file</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>chr1</strong> (<em>str</em>) &#8211; str of the breakpoint in first chromosome</li>\n<li><strong>start1</strong> (<em>int</em>) &#8211; int of the start location of the breakpoint in first chromosome</li>\n<li><strong>chr2</strong> (<em>str</em>) &#8211; str of the breakpoint in second chromosome</li>\n<li><strong>start2</strong> (<em>int</em>) &#8211; int of the start location of the breakpoint in second chromosome</li>\n<li><strong>blacklist</strong> (<em>list</em>) &#8211; A list containing black listed regions</li>\n<li><strong>extension</strong> (<em>int</em>) &#8211; an value for search in positive and negative direction of the start1 and start2 location</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.checkBlackList.ReadBlackListFile\">\n<code class=\"descclassname\">iCallSV.checkBlackList.</code><code class=\"descname\">ReadBlackListFile</code><span class=\"sig-paren\">(</span><em>BlackListFile</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkBlackList/#ReadBlackListFile\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkBlackList.ReadBlackListFile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read the <code class=\"docutils literal\"><span class=\"pre\">blacklist</span> <span class=\"pre\">region</span> <span class=\"pre\">file</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>BlackListFile</strong> (<em>str</em>) &#8211; str of file to be read.</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">A list containing black listed regions.</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">list.</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.checkHotSpotList\">\n<span id=\"icallsv-checkhotspotlist-module\"></span><h2>iCallSV.checkHotSpotList module<a class=\"headerlink\" href=\"#module-iCallSV.checkHotSpotList\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"checkhotspotlist\">\n<h3>checkHotSpotList<a class=\"headerlink\" href=\"#checkhotspotlist\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will read the hotspot file and tell if it is a hotspot or not</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.checkHotSpotList.CheckIfItIsHotspot\">\n<code class=\"descclassname\">iCallSV.checkHotSpotList.</code><code class=\"descname\">CheckIfItIsHotspot</code><span class=\"sig-paren\">(</span><em>chr1</em>, <em>start1</em>, <em>chr2</em>, <em>start2</em>, <em>hotspotDict</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkHotSpotList/#CheckIfItIsHotspot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkHotSpotList.CheckIfItIsHotspot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if coordinate are present in the <code class=\"docutils literal\"><span class=\"pre\">hotspot</span> <span class=\"pre\">region</span> <span class=\"pre\">file</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>chr1</strong> (<em>str</em>) &#8211; str of the breakpoint in first chromosome</li>\n<li><strong>start1</strong> (<em>int</em>) &#8211; int of the start location of the breakpoint in first chromosome</li>\n<li><strong>chr2</strong> (<em>str</em>) &#8211; str of the breakpoint in second chromosome</li>\n<li><strong>start2</strong> (<em>int</em>) &#8211; int of the start location of the breakpoint in second chromosome</li>\n<li><strong>hotspotDict</strong> (<em>dict</em>) &#8211; A dict containing hotspot regions</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.checkHotSpotList.ReadHotSpotFile\">\n<code class=\"descclassname\">iCallSV.checkHotSpotList.</code><code class=\"descname\">ReadHotSpotFile</code><span class=\"sig-paren\">(</span><em>HotSpotFile</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkHotSpotList/#ReadHotSpotFile\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkHotSpotList.ReadHotSpotFile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read the <code class=\"docutils literal\"><span class=\"pre\">HotSpot</span> <span class=\"pre\">region</span> <span class=\"pre\">file</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>HotSpotFile</strong> (<em>str</em>) &#8211; str of file to be read.</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">A dict containing hotspot regions</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">dict</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.checkparameters\">\n<span id=\"icallsv-checkparameters-module\"></span><h2>iCallSV.checkparameters module<a class=\"headerlink\" href=\"#module-iCallSV.checkparameters\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"checkparameters\">\n<h3>checkparameters<a class=\"headerlink\" href=\"#checkparameters\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This modules checks the parameters for various type of inputs.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.checkparameters.checkDellyAnalysisType\">\n<code class=\"descclassname\">iCallSV.checkparameters.</code><code class=\"descname\">checkDellyAnalysisType</code><span class=\"sig-paren\">(</span><em>varaibleToCheck</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkparameters/#checkDellyAnalysisType\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkparameters.checkDellyAnalysisType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check <cite>if the variable for Delly analysis exists or not`</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>variableToCheck</strong> (<em>str</em>) &#8211; check if str is DEL|DUP|INV|TRA</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.checkparameters.checkDir\">\n<code class=\"descclassname\">iCallSV.checkparameters.</code><code class=\"descname\">checkDir</code><span class=\"sig-paren\">(</span><em>folderToCheck</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkparameters/#checkDir\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkparameters.checkDir\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check <cite>if the folder exists or not`</cite></p>\n<p><code class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></code>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>folderToCheck</strong> (<em>str</em>) &#8211; Name of the folder to be checked.</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.checkparameters.checkEmpty\">\n<code class=\"descclassname\">iCallSV.checkparameters.</code><code class=\"descname\">checkEmpty</code><span class=\"sig-paren\">(</span><em>variableToCheck</em>, <em>variableName</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkparameters/#checkEmpty\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkparameters.checkEmpty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check <cite>if the variable is None or not`</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>variableToCheck</strong> (<em>str</em>) &#8211; check if str is None or not</li>\n<li><strong>variableName</strong> (<em>str</em>) &#8211; Name of the None object to be verified</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">None</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">None</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.checkparameters.checkFile\">\n<code class=\"descclassname\">iCallSV.checkparameters.</code><code class=\"descname\">checkFile</code><span class=\"sig-paren\">(</span><em>fileToCheck</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkparameters/#checkFile\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkparameters.checkFile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check <cite>if the file exists or not`</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>fileToCheck</strong> (<em>str</em>) &#8211; Name of the file to be checked.</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.checkparameters.checkInt\">\n<code class=\"descclassname\">iCallSV.checkparameters.</code><code class=\"descname\">checkInt</code><span class=\"sig-paren\">(</span><em>variableToCheck</em>, <em>variableName</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/checkparameters/#checkInt\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.checkparameters.checkInt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check <cite>if the variable is int or not`</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>variableToCheck</strong> (<em>int</em>) &#8211; Check if it is int or not</li>\n<li><strong>variableName</strong> (<em>str</em>) &#8211; Name of the int object to be verified</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">None</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">None</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.combineVCF\">\n<span id=\"icallsv-combinevcf-module\"></span><h2>iCallSV.combineVCF module<a class=\"headerlink\" href=\"#module-iCallSV.combineVCF\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"combinevcf\">\n<h3>combineVCF<a class=\"headerlink\" href=\"#combinevcf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will combine multiple vcf file with same headers</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.combineVCF.run\">\n<code class=\"descclassname\">iCallSV.combineVCF.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>vcfFiles</em>, <em>combinedVCF</em>, <em>verbose</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/combineVCF/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.combineVCF.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">combine</span> <span class=\"pre\">multiple</span> <span class=\"pre\">vcf</span> <span class=\"pre\">file</span> <span class=\"pre\">with</span> <span class=\"pre\">same</span> <span class=\"pre\">headers</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>vcfFiles</strong> (<em>list</em>) &#8211; a list of .vcf files to be combined</li>\n<li><strong>combinedVCF</strong> (<em>str</em>) &#8211; str for the output of combined vcf files</li>\n<li><strong>verbose</strong> (<em>bool</em>) &#8211; a boolean</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A str name of combined vcf file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.dellyVcf2Tab\">\n<span id=\"icallsv-dellyvcf2tab-module\"></span><h2>iCallSV.dellyVcf2Tab module<a class=\"headerlink\" href=\"#module-iCallSV.dellyVcf2Tab\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"dellyvcf2tab\">\n<h3>dellyVcf2Tab<a class=\"headerlink\" href=\"#dellyvcf2tab\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module converts the Delly Vcf file having tumor normal, to tab-delimited format for input to iAnnotateSV</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.dellyVcf2Tab.vcf2tab\">\n<code class=\"descclassname\">iCallSV.dellyVcf2Tab.</code><code class=\"descname\">vcf2tab</code><span class=\"sig-paren\">(</span><em>vcfFile</em>, <em>outputDir</em>, <em>verbose</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/dellyVcf2Tab/#vcf2tab\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.dellyVcf2Tab.vcf2tab\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This <code class=\"docutils literal\"><span class=\"pre\">converts</span></code> the Delly Vcf file having tumor normal, to tab-delimited format for input to iAnnotateSV</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>vcfFile</strong> (<em>str</em>) &#8211; str of vcf file to be converted</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; str for the output directory</li>\n<li><strong>verbose</strong> (<em>bool</em>) &#8211; a boolean</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A str name of tab-delimited file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.dellyVcf2targetSeqView\">\n<span id=\"icallsv-dellyvcf2targetseqview-module\"></span><h2>iCallSV.dellyVcf2targetSeqView module<a class=\"headerlink\" href=\"#module-iCallSV.dellyVcf2targetSeqView\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"dellyvcf2targetseqview\">\n<h3>dellyVcf2targetSeqView<a class=\"headerlink\" href=\"#dellyvcf2targetseqview\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">Convert VCF to targetSeqView</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.dellyVcf2targetSeqView.Convert2targetSeqView\">\n<code class=\"descclassname\">iCallSV.dellyVcf2targetSeqView.</code><code class=\"descname\">Convert2targetSeqView</code><span class=\"sig-paren\">(</span><em>sampleName</em>, <em>sampleBamName</em>, <em>sampleSplitBamName</em>, <em>vcfFile</em>, <em>outputDir</em>, <em>outputFileName</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/dellyVcf2targetSeqView/#Convert2targetSeqView\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.dellyVcf2targetSeqView.Convert2targetSeqView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This <code class=\"docutils literal\"><span class=\"pre\">converts</span></code> the Delly Vcf file having tumor normal, to tab-delimited format for input to targetSeqView</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>sampleName</strong> (<em>str</em>) &#8211; str for the name of the sample being analyzed</li>\n<li><strong>sampleBamName</strong> (<em>str</em>) &#8211; str for the pair-end reads bam file</li>\n<li><strong>sampleSplitBamName</strong> (<em>str</em>) &#8211; str for the split reads bam file</li>\n<li><strong>vcfFile</strong> (<em>str</em>) &#8211; str of vcf file to be converted</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; str for the output directory</li>\n<li><strong>outputFileName</strong> (<em>str</em>) &#8211; str for the output File</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A str name of tab-delimited file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.filterAnnotatedSV\">\n<span id=\"icallsv-filterannotatedsv-module\"></span><h2>iCallSV.filterAnnotatedSV module<a class=\"headerlink\" href=\"#module-iCallSV.filterAnnotatedSV\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"filterannotatedsv\">\n<h3>filterAnnotatedSV<a class=\"headerlink\" href=\"#filterannotatedsv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will filter calls from the merged file</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.filterAnnotatedSV.checkBlackListGene\">\n<code class=\"descclassname\">iCallSV.filterAnnotatedSV.</code><code class=\"descname\">checkBlackListGene</code><span class=\"sig-paren\">(</span><em>gene1</em>, <em>gene2</em>, <em>blacklistGenes</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/filterAnnotatedSV/#checkBlackListGene\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.filterAnnotatedSV.checkBlackListGene\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">check</span> <span class=\"pre\">for</span> <span class=\"pre\">blacklisted</span> <span class=\"pre\">genes</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>gene1</strong> (<em>str</em>) &#8211; str for the name of gene at breakpoint 1</li>\n<li><strong>gene2</strong> (<em>str</em>) &#8211; str for the name of gene at breakpoint 2</li>\n<li><strong>blacklistGenes</strong> (<em>list</em>) &#8211; list containing blacklisted genes</li>\n<li><strong>genesToKeepFile</strong> (<em>str</em>) &#8211; str for the txt file containing genes to keep</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.filterAnnotatedSV.checkEventInIntronFlag\">\n<code class=\"descclassname\">iCallSV.filterAnnotatedSV.</code><code class=\"descname\">checkEventInIntronFlag</code><span class=\"sig-paren\">(</span><em>gene1</em>, <em>gene2</em>, <em>site1</em>, <em>site2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/filterAnnotatedSV/#checkEventInIntronFlag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.filterAnnotatedSV.checkEventInIntronFlag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">Check</span> <span class=\"pre\">if</span> <span class=\"pre\">the</span> <span class=\"pre\">event</span> <span class=\"pre\">is</span> <span class=\"pre\">in</span> <span class=\"pre\">the</span> <span class=\"pre\">intron</span> <span class=\"pre\">only</span> <span class=\"pre\">and</span> <span class=\"pre\">not</span> <span class=\"pre\">affecting</span>\n<span class=\"pre\">splicing</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>gene1</strong> (<em>str</em>) &#8211; str for the name of gene at breakpoint 1</li>\n<li><strong>gene2</strong> (<em>str</em>) &#8211; str for the name of gene at breakpoint 2</li>\n<li><strong>site1</strong> (<em>str</em>) &#8211; str for the description of site in breakpoint 1</li>\n<li><strong>site2</strong> (<em>str</em>) &#8211; str for the description of site in breakpoint 2</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A boolean tag indicating True or False</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">bool</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.filterAnnotatedSV.checkGeneListToKeep\">\n<code class=\"descclassname\">iCallSV.filterAnnotatedSV.</code><code class=\"descname\">checkGeneListToKeep</code><span class=\"sig-paren\">(</span><em>gene1</em>, <em>gene2</em>, <em>keepGenes</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/filterAnnotatedSV/#checkGeneListToKeep\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.filterAnnotatedSV.checkGeneListToKeep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.filterAnnotatedSV.run\">\n<code class=\"descclassname\">iCallSV.filterAnnotatedSV.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>inputTxt</em>, <em>outputDir</em>, <em>outPrefix</em>, <em>blacklistGenesFile</em>, <em>genesToKeepFile</em>, <em>verbose</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/filterAnnotatedSV/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.filterAnnotatedSV.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will <code class=\"docutils literal\"><span class=\"pre\">filter</span> <span class=\"pre\">sv</span> <span class=\"pre\">calls</span></code> from the final merged file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>inputTxt</strong> (<em>str</em>) &#8211; str for the txt file to be filtered</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; str for the output directory</li>\n<li><strong>outputPrefix</strong> (<em>str</em>) &#8211; str prefix for the output File</li>\n<li><strong>blacklistGenesFile</strong> (<em>str</em>) &#8211; str for the txt file containing blacklisted genes</li>\n<li><strong>genesToKeepFile</strong> (<em>str</em>) &#8211; str for the txt file containing genes to keep</li>\n<li><strong>verbose</strong> (<em>bool</em>) &#8211; a boolean</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">A str name of final sv file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.iCallSV\">\n<span id=\"icallsv-icallsv-module\"></span><h2>iCallSV.iCallSV module<a class=\"headerlink\" href=\"#module-iCallSV.iCallSV\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"icallsv\">\n<h3>iCallSV<a class=\"headerlink\" href=\"#icallsv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\"><p class=\"first\">iCallSV is a wrapper to the iCallSV package which facilitates calling structural variants from Next Generation Sequencing methods such as Illumina</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">author:</th><td class=\"field-body\"><p class=\"first\">Ronak H Shah</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">copyright:</th><td class=\"field-body\"><ol class=\"first loweralpha simple\" start=\"3\">\n<li>2015-2016 by Ronak H Shah for Memorial Sloan Kettering Cancer Center. All rights reserved.</li>\n</ol>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">license:</th><td class=\"field-body\"><p class=\"first\">Apache License 2.0</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">contact:</th><td class=\"field-body\"><p class=\"first last\"><a class=\"reference external\" href=\"mailto:rons&#46;shah&#37;&#52;&#48;gmail&#46;com\">rons<span>&#46;</span>shah<span>&#64;</span>gmail<span>&#46;</span>com</a></p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.iCallSV_dmp_wrapper\">\n<span id=\"icallsv-icallsv-dmp-wrapper-module\"></span><h2>iCallSV.iCallSV_dmp_wrapper module<a class=\"headerlink\" href=\"#module-iCallSV.iCallSV_dmp_wrapper\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"icallsv-dmp-wrapper\">\n<h3>iCallSV_dmp_wrapper<a class=\"headerlink\" href=\"#icallsv-dmp-wrapper\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\"><p class=\"first\">iCallSV is a wrapper to run the iCallSV package on MSKCC data</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">author:</th><td class=\"field-body\"><p class=\"first\">Ronak H Shah</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">copyright:</th><td class=\"field-body\"><ol class=\"first loweralpha simple\" start=\"3\">\n<li>2015-2016 by Ronak H Shah for Memorial Sloan Kettering Cancer Center. All rights reserved.</li>\n</ol>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">license:</th><td class=\"field-body\"><p class=\"first\">Apache License 2.0</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">contact:</th><td class=\"field-body\"><p class=\"first\"><a class=\"reference external\" href=\"mailto:rons&#46;shah&#37;&#52;&#48;gmail&#46;com\">rons<span>&#46;</span>shah<span>&#64;</span>gmail<span>&#46;</span>com</a></p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\" colspan=\"2\">deffield    updated:</th></tr>\n<tr class=\"field-even field\"><td>&nbsp;</td><td class=\"field-body\"><p class=\"first last\">Updated</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.RunJob\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">RunJob</code><span class=\"sig-paren\">(</span><em>cmd</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#RunJob\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.RunJob\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a command run the job.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>cmd</strong> (<em>str</em>) &#8211; str of command to be run on the local machine</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.RunPerPool\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">RunPerPool</code><span class=\"sig-paren\">(</span><em>titleFile</em>, <em>outdir</em>, <em>HSmetricsFileList</em>, <em>bamFileList</em>, <em>args</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#RunPerPool\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.RunPerPool\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will run the pool to be analyzed.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>titleFile</strong> (<em>str</em>) &#8211; str of meta information file</li>\n<li><strong>outdir</strong> (<em>str</em>) &#8211; str of output directory</li>\n<li><strong>HSmetricsFileList</strong> (<em>list</em>) &#8211; list of picard hsmetrics files</li>\n<li><strong>bamFileList</strong> (<em>list</em>) &#8211; list of bam files</li>\n<li><strong>args</strong> (<em>Namespace</em>) &#8211; Namespace of args to get other variables</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">None</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">None</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.SelectNormal\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">SelectNormal</code><span class=\"sig-paren\">(</span><em>normal</em>, <em>poolnormal</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#SelectNormal\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.SelectNormal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select the best possible normal.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>normal</strong> (<em>str</em>) &#8211; str of match normal</li>\n<li><strong>poolnormal</strong> (<em>str</em>) &#8211; str of pool normal</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">str with decision whether to run matched or unmatched</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.SetupRun\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">SetupRun</code><span class=\"sig-paren\">(</span><em>poolName</em>, <em>args</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#SetupRun\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.SetupRun\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will setup the run to be analyzed.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>poolName</strong> (<em>str</em>) &#8211; str of pool to be analyzed</li>\n<li><strong>args</strong> (<em>Namespace</em>) &#8211; Namespace of args to get other variables</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">Multiple objects</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">list</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.getSubDirs\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">getSubDirs</code><span class=\"sig-paren\">(</span><em>dirLocation</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#getSubDirs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.getSubDirs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get all sub directories.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>dirLocation</strong> (<em>str</em>) &#8211; str of directory location</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">list of all sub directories</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">list</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.main\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">main</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#main\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.iCallSV_dmp_wrapper.processor\">\n<code class=\"descclassname\">iCallSV.iCallSV_dmp_wrapper.</code><code class=\"descname\">processor</code><span class=\"sig-paren\">(</span><em>i</em>, <em>jobqueue</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/iCallSV_dmp_wrapper/#processor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.iCallSV_dmp_wrapper.processor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Operate on a jobqueue.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>i</strong> (<em>int</em>) &#8211; count of the job</li>\n<li><strong>jobqueue</strong> (<em>Namespace</em>) &#8211; Namespace for jobqueue</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">None</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">None</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.launchThreads\">\n<span id=\"icallsv-launchthreads-module\"></span><h2>iCallSV.launchThreads module<a class=\"headerlink\" href=\"#module-iCallSV.launchThreads\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Created on December 21, 2015\nDescription: This module will be launching functions as threads\n&#64;author: Ronak H Shah</p>\n<dl class=\"class\">\n<dt id=\"iCallSV.launchThreads.myThread\">\n<em class=\"property\">class </em><code class=\"descclassname\">iCallSV.launchThreads.</code><code class=\"descname\">myThread</code><span class=\"sig-paren\">(</span><em>threadID</em>, <em>name</em>, <em>counter</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/launchThreads/#myThread\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.launchThreads.myThread\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">threading.Thread</span></code></p>\n<dl class=\"method\">\n<dt id=\"iCallSV.launchThreads.myThread.run\">\n<code class=\"descname\">run</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/launchThreads/#myThread.run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.launchThreads.myThread.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"iCallSV.launchThreads.print_time\">\n<code class=\"descclassname\">iCallSV.launchThreads.</code><code class=\"descname\">print_time</code><span class=\"sig-paren\">(</span><em>threadName</em>, <em>delay</em>, <em>counter</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/launchThreads/#print_time\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.launchThreads.print_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-iCallSV.launch_FilterDellyCalls\">\n<span id=\"icallsv-launch-filterdellycalls-module\"></span><h2>iCallSV.launch_FilterDellyCalls module<a class=\"headerlink\" href=\"#module-iCallSV.launch_FilterDellyCalls\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"launch-filterdellycalls\">\n<h3>launch_FilterDellyCalls<a class=\"headerlink\" href=\"#launch-filterdellycalls\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will filter delly results and create filtered delly vcf files</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.launch_FilterDellyCalls.launch_filterdellycalls_for_different_analysis_type\">\n<code class=\"descclassname\">iCallSV.launch_FilterDellyCalls.</code><code class=\"descname\">launch_filterdellycalls_for_different_analysis_type</code><span class=\"sig-paren\">(</span><em>args</em>, <em>config</em>, <em>sampleOutdirForDelly</em>, <em>del_vcf</em>, <em>dup_vcf</em>, <em>inv_vcf</em>, <em>tra_vcf</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/launch_FilterDellyCalls/#launch_filterdellycalls_for_different_analysis_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.launch_FilterDellyCalls.launch_filterdellycalls_for_different_analysis_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will launch the filtering of delly calls in parallel.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>args</strong> (<em>Namespace</em>) &#8211; Namespace of args to get other variables</li>\n<li><strong>config</strong> (<em>Namespace</em>) &#8211; configuration file passed to iCallSV</li>\n<li><strong>sampleOutdirForDelly</strong> (<em>str</em>) &#8211; Output directory for delly vcf files.</li>\n<li><strong>del_vcf</strong> (<em>str</em>) &#8211; Path to deletion based vcf file</li>\n<li><strong>dup_vcf</strong> (<em>str</em>) &#8211; Path to duplication based vcf file</li>\n<li><strong>inv_vcf</strong> (<em>str</em>) &#8211; Path to inversion based vcf file</li>\n<li><strong>tra_vcf</strong> (<em>str</em>) &#8211; Path to translocation based vcf file</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">Multiple objects</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">list</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.launch_Run_Delly\">\n<span id=\"icallsv-launch-run-delly-module\"></span><h2>iCallSV.launch_Run_Delly module<a class=\"headerlink\" href=\"#module-iCallSV.launch_Run_Delly\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"launch-run-delly\">\n<h3>launch_Run_Delly<a class=\"headerlink\" href=\"#launch-run-delly\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will be launching delly using Run_Delly</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.launch_Run_Delly.launch_delly_for_different_analysis_type\">\n<code class=\"descclassname\">iCallSV.launch_Run_Delly.</code><code class=\"descname\">launch_delly_for_different_analysis_type</code><span class=\"sig-paren\">(</span><em>args</em>, <em>config</em>, <em>sampleOutdirForDelly</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/launch_Run_Delly/#launch_delly_for_different_analysis_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.launch_Run_Delly.launch_delly_for_different_analysis_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will launch delly calls in parallel.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>args</strong> (<em>Namespace</em>) &#8211; Namespace of args to get other variables</li>\n<li><strong>config</strong> (<em>Namespace</em>) &#8211; configuration file passed to iCallSV</li>\n<li><strong>sampleOutdirForDelly</strong> (<em>str</em>) &#8211; Output directory for delly vcf files.</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">Multiple objects</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">list</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.make_analysis_dir\">\n<span id=\"icallsv-make-analysis-dir-module\"></span><h2>iCallSV.make_analysis_dir module<a class=\"headerlink\" href=\"#module-iCallSV.make_analysis_dir\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"make-analysis-dir\">\n<h3>make_analysis_dir<a class=\"headerlink\" href=\"#make-analysis-dir\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will make directory structure for running analysis</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.make_analysis_dir.makeOutputDir\">\n<code class=\"descclassname\">iCallSV.make_analysis_dir.</code><code class=\"descname\">makeOutputDir</code><span class=\"sig-paren\">(</span><em>args</em>, <em>tool</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/make_analysis_dir/#makeOutputDir\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.make_analysis_dir.makeOutputDir\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will make the output directory tree.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>args</strong> (<em>Namespace</em>) &#8211; Namespace of args to get other variables</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">Multiple objects</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">list</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.makebamindex\">\n<span id=\"icallsv-makebamindex-module\"></span><h2>iCallSV.makebamindex module<a class=\"headerlink\" href=\"#module-iCallSV.makebamindex\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"makebamindex\">\n<h3>makebamindex<a class=\"headerlink\" href=\"#makebamindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">Use PySAM to make bam index</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.makebamindex.MakeIndex\">\n<code class=\"descclassname\">iCallSV.makebamindex.</code><code class=\"descname\">MakeIndex</code><span class=\"sig-paren\">(</span><em>bamFile</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/makebamindex/#MakeIndex\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.makebamindex.MakeIndex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will make bam index if not there for a bam file using pysam.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>bamFile</strong> (<em>str</em>) &#8211; Path to bam file</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.mergeFinalFiles\">\n<span id=\"icallsv-mergefinalfiles-module\"></span><h2>iCallSV.mergeFinalFiles module<a class=\"headerlink\" href=\"#module-iCallSV.mergeFinalFiles\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"mergefinalfiles\">\n<h3>mergeFinalFiles<a class=\"headerlink\" href=\"#mergefinalfiles\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">Merge VCF, iAnnotateSV tab and targetSeqView tab file into a single tab-delimited file</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.mergeFinalFiles.run\">\n<code class=\"descclassname\">iCallSV.mergeFinalFiles.</code><code class=\"descname\">run</code><span class=\"sig-paren\">(</span><em>aId</em>, <em>bId</em>, <em>vcfFile</em>, <em>annoTab</em>, <em>confTab</em>, <em>outDir</em>, <em>outputPrefix</em>, <em>verbose</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/mergeFinalFiles/#run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.mergeFinalFiles.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This will Merge VCF, iAnnotateSV tab and targetSeqView tab file into a single tab-delimited file</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>aId</strong> (<em>str</em>) &#8211; Sample ID for case that has the structural abberations</li>\n<li><strong>bId</strong> (<em>str</em>) &#8211; Sample ID for control</li>\n<li><strong>vcfFile</strong> (<em>str</em>) &#8211; Delly filtered and merged VCF file</li>\n<li><strong>annoTab</strong> (<em>str</em>) &#8211; iAnnotateSV tab-delimited file with annotations</li>\n<li><strong>confTab</strong> (<em>str</em>) &#8211; targetSeqView tab-delimited file with probability score</li>\n<li><strong>outputDir</strong> (<em>str</em>) &#8211; Directory to write the output file</li>\n<li><strong>outputPrefix</strong> (<em>str</em>) &#8211; Output File Prefix</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">str of the tab-delimited file</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.sortbamByCoordinate\">\n<span id=\"icallsv-sortbambycoordinate-module\"></span><h2>iCallSV.sortbamByCoordinate module<a class=\"headerlink\" href=\"#module-iCallSV.sortbamByCoordinate\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"sortbambycoordinate\">\n<h3>sortbamByCoordinate<a class=\"headerlink\" href=\"#sortbambycoordinate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will sort bam file by coordinate</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.sortbamByCoordinate.sortBam\">\n<code class=\"descclassname\">iCallSV.sortbamByCoordinate.</code><code class=\"descname\">sortBam</code><span class=\"sig-paren\">(</span><em>inputBam</em>, <em>outputBamName</em>, <em>outputDir</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/sortbamByCoordinate/#sortBam\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.sortbamByCoordinate.sortBam\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV.sortbamByReadName\">\n<span id=\"icallsv-sortbambyreadname-module\"></span><h2>iCallSV.sortbamByReadName module<a class=\"headerlink\" href=\"#module-iCallSV.sortbamByReadName\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"sortbambyreadname\">\n<h3>sortbamByReadName<a class=\"headerlink\" href=\"#sortbambyreadname\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Description:</th><td class=\"field-body\">This module will sort bam file by name</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"function\">\n<dt id=\"iCallSV.sortbamByReadName.sortBam\">\n<code class=\"descclassname\">iCallSV.sortbamByReadName.</code><code class=\"descname\">sortBam</code><span class=\"sig-paren\">(</span><em>inputBam</em>, <em>outputBamName</em>, <em>outputDir</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/iCallSV/sortbamByReadName/#sortBam\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#iCallSV.sortbamByReadName.sortBam\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-iCallSV\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-iCallSV\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": true, "title": "iCallSV package", "sourcename": "source/iCallSV.txt", "customsidebar": null, "current_page_name": "source/iCallSV", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">iCallSV package</a><ul>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.FilterDellyCalls\">iCallSV.FilterDellyCalls module</a><ul>\n<li><a class=\"reference internal\" href=\"#filterdellycalls\">FilterDellyCalls</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.Run_Delly\">iCallSV.Run_Delly module</a><ul>\n<li><a class=\"reference internal\" href=\"#run-delly\">Run_Delly</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.Run_iAnnotateSV\">iCallSV.Run_iAnnotateSV module</a><ul>\n<li><a class=\"reference internal\" href=\"#run-iannotate\">Run_iAnnotate</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.Run_samblaster\">iCallSV.Run_samblaster module</a><ul>\n<li><a class=\"reference internal\" href=\"#run-samblaster\">Run_samblaster</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.Run_targetSeqView\">iCallSV.Run_targetSeqView module</a><ul>\n<li><a class=\"reference internal\" href=\"#run-targetseqview\">Run_targetSeqView</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.checkBlackList\">iCallSV.checkBlackList module</a><ul>\n<li><a class=\"reference internal\" href=\"#checkblacklist\">checkBlackList</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.checkHotSpotList\">iCallSV.checkHotSpotList module</a><ul>\n<li><a class=\"reference internal\" href=\"#checkhotspotlist\">checkHotSpotList</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.checkparameters\">iCallSV.checkparameters module</a><ul>\n<li><a class=\"reference internal\" href=\"#checkparameters\">checkparameters</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.combineVCF\">iCallSV.combineVCF module</a><ul>\n<li><a class=\"reference internal\" href=\"#combinevcf\">combineVCF</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.dellyVcf2Tab\">iCallSV.dellyVcf2Tab module</a><ul>\n<li><a class=\"reference internal\" href=\"#dellyvcf2tab\">dellyVcf2Tab</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.dellyVcf2targetSeqView\">iCallSV.dellyVcf2targetSeqView module</a><ul>\n<li><a class=\"reference internal\" href=\"#dellyvcf2targetseqview\">dellyVcf2targetSeqView</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.filterAnnotatedSV\">iCallSV.filterAnnotatedSV module</a><ul>\n<li><a class=\"reference internal\" href=\"#filterannotatedsv\">filterAnnotatedSV</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.iCallSV\">iCallSV.iCallSV module</a><ul>\n<li><a class=\"reference internal\" href=\"#icallsv\">iCallSV</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.iCallSV_dmp_wrapper\">iCallSV.iCallSV_dmp_wrapper module</a><ul>\n<li><a class=\"reference internal\" href=\"#icallsv-dmp-wrapper\">iCallSV_dmp_wrapper</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.launchThreads\">iCallSV.launchThreads module</a></li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.launch_FilterDellyCalls\">iCallSV.launch_FilterDellyCalls module</a><ul>\n<li><a class=\"reference internal\" href=\"#launch-filterdellycalls\">launch_FilterDellyCalls</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.launch_Run_Delly\">iCallSV.launch_Run_Delly module</a><ul>\n<li><a class=\"reference internal\" href=\"#launch-run-delly\">launch_Run_Delly</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.make_analysis_dir\">iCallSV.make_analysis_dir module</a><ul>\n<li><a class=\"reference internal\" href=\"#make-analysis-dir\">make_analysis_dir</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.makebamindex\">iCallSV.makebamindex module</a><ul>\n<li><a class=\"reference internal\" href=\"#makebamindex\">makebamindex</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.mergeFinalFiles\">iCallSV.mergeFinalFiles module</a><ul>\n<li><a class=\"reference internal\" href=\"#mergefinalfiles\">mergeFinalFiles</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.sortbamByCoordinate\">iCallSV.sortbamByCoordinate module</a><ul>\n<li><a class=\"reference internal\" href=\"#sortbambycoordinate\">sortbamByCoordinate</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV.sortbamByReadName\">iCallSV.sortbamByReadName module</a><ul>\n<li><a class=\"reference internal\" href=\"#sortbambyreadname\">sortbamByReadName</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-iCallSV\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "prev": null, "metatags": ""}