{"body": "<h1>Source code for iCallSV.iCallSV_dmp_wrapper</h1><div class=\"highlight\"><pre>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">iCallSV_dmp_wrapper</span>\n<span class=\"sd\">~~~~~~~~~~~~~~~~~~~</span>\n\n<span class=\"sd\">:Description: iCallSV is a wrapper to run the iCallSV package on MSKCC data</span>\n<span class=\"sd\">:author:     Ronak H Shah</span>\n<span class=\"sd\">:copyright:  (c) 2015-2016 by Ronak H Shah for Memorial Sloan Kettering Cancer Center. All rights reserved.</span>\n<span class=\"sd\">:license:    Apache License 2.0</span>\n<span class=\"sd\">:contact:    rons.shah@gmail.com</span>\n<span class=\"sd\">:deffield    updated: Updated</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">glob</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">subprocess</span> <span class=\"kn\">import</span> <span class=\"n\">Popen</span><span class=\"p\">,</span> <span class=\"n\">PIPE</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shlex</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"c1\"># from threading import Thread, Lock</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gridmap</span> <span class=\"kn\">import</span> <span class=\"n\">Job</span><span class=\"p\">,</span> <span class=\"n\">process_jobs</span>\n\n\n<div class=\"viewcode-block\" id=\"main\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.main\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    \n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span>\n        <span class=\"n\">prog</span><span class=\"o\">=</span><span class=\"s1\">&#39;iCallSV_dmp_wrapper.py&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Run iCallSV on selected pools using MSK data&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">usage</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"si\">%(prog)s</span><span class=\"s1\"> [options]&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-fl&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--folderList&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;folderList&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;folders.fof&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full path folders file of files.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-qc&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--qcLocation&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;qcLocation&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/some/path/qcLocation&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full path qc files.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-b&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--bamLocation&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;bamLocation&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/some/path/bamlocation&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full path bam files.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-P&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--python&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;python&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;/dmp/resources/prod/tools/system/python/production/bin/python&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/somepath/python&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full path Pyhton executables.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-icsv&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--iCallSV&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;icsv&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;/home/shahr2/git/iCallSV-master/iCallSV/iCallSV.py&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/somepath/iCallSV.py&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full path iCallSV.py executables.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-conf&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--iCallSVconf&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;conf&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;/home/shahr2/git/iCallSV-master/iCallSV/configuration/template_dmp.ini&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/somepath/template.ini&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full path configuration file to run iCallSV&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-q&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--queue&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;queue&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;test.q&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;all.q or clin.q&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Name of the SGE queue&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-qsub&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--qsubPath&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;qsub&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;/common/sge/bin/lx-amd64/qsub&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/somepath/qsub&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full Path to the qsub executables of SGE.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-t&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--threads&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;threads&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;5&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;5&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Number of Threads to be used to run iCallSV&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-v&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--verbose&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store_true&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;verbose&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;make lots of noise [default]&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;-o&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;--outDir&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">&quot;store&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;outDir&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">&#39;/somepath/output&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full Path to the output dir.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;Starting the Process to Run iCallSV.&quot;</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">folderList</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">filecontent</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">filecontent</span><span class=\"p\">:</span>\n            <span class=\"n\">poolName</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">()</span>\n            <span class=\"c1\"># print poolName</span>\n            <span class=\"k\">if</span> <span class=\"n\">poolName</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                    <span class=\"k\">print</span> <span class=\"s2\">&quot;####Processing data for:&quot;</span><span class=\"p\">,</span> <span class=\"n\">poolName</span>\n                <span class=\"p\">(</span><span class=\"n\">titleFile</span><span class=\"p\">,</span>\n                 <span class=\"n\">outdir</span><span class=\"p\">,</span>\n                 <span class=\"n\">HSmetricsFileList</span><span class=\"p\">,</span>\n                 <span class=\"n\">bamFileList</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">SetupRun</span><span class=\"p\">(</span><span class=\"n\">poolName</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n                <span class=\"n\">RunPerPool</span><span class=\"p\">(</span>\n                    <span class=\"n\">titleFile</span><span class=\"p\">,</span>\n                    <span class=\"n\">outdir</span><span class=\"p\">,</span>\n                    <span class=\"n\">HSmetricsFileList</span><span class=\"p\">,</span>\n                    <span class=\"n\">bamFileList</span><span class=\"p\">,</span>\n                    <span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"n\">interesting_files</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">outdir</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IMPACT*&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;StructuralVariantAnalysis/DellyDir/*final.txt&quot;</span><span class=\"p\">))</span>\n    <span class=\"n\">df_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">full_df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">interesting_files</span><span class=\"p\">):</span>\n        <span class=\"n\">df_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">))</span>\n    <span class=\"n\">full_df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">df_list</span><span class=\"p\">)</span>\n    <span class=\"n\">full_df</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;FinalOutput.txt&#39;</span><span class=\"p\">),</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;Finished the Process to Run iCallSV.&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SetupRun\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.SetupRun\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">SetupRun</span><span class=\"p\">(</span><span class=\"n\">poolName</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;This will setup the run to be analyzed.</span>\n\n\n<span class=\"sd\">    :param str poolName: str of pool to be analyzed</span>\n<span class=\"sd\">    :param Namespace args: Namespace of args to get other variables</span>\n<span class=\"sd\">    :return: Multiple objects</span>\n<span class=\"sd\">    :rtype: list</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">bamlocation</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">bamLocation</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">poolName</span>\n    <span class=\"c1\"># Get the qc data location</span>\n    <span class=\"n\">baseqclocation</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">qcLocation</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">poolName</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/*&quot;</span>\n    <span class=\"c1\"># print bamlocation,baseqclocation</span>\n    <span class=\"n\">all_qc_subdirs</span> <span class=\"o\">=</span> <span class=\"n\">getSubDirs</span><span class=\"p\">(</span><span class=\"n\">baseqclocation</span><span class=\"p\">)</span>\n    <span class=\"c1\"># print all_qc_subdirs</span>\n    <span class=\"n\">qclocation</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">all_qc_subdirs</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">getmtime</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"n\">bamlocation</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">BAM Location:&quot;</span><span class=\"p\">,</span> <span class=\"n\">bamlocation</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">BAM LOCATION&quot;</span><span class=\"p\">,</span> <span class=\"n\">bamlocation</span><span class=\"p\">,</span> <span class=\"s2\">&quot; DOES NOT EXISTS!!!, Please Review you bamLocation INPUT</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"n\">qclocation</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">QC Location:&quot;</span><span class=\"p\">,</span> <span class=\"n\">qclocation</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">QC LOCATION&quot;</span><span class=\"p\">,</span> <span class=\"n\">qclocation</span><span class=\"p\">,</span> <span class=\"s2\">&quot; DOES NOT EXISTS!!!, Please Review you qcLocation INPUT</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"n\">titleFile</span> <span class=\"o\">=</span> <span class=\"n\">poolName</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">titleFile</span> <span class=\"o\">=</span> <span class=\"n\">qclocation</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">titleFile</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_title.txt&quot;</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">titleFile</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">TitleFile:&quot;</span><span class=\"p\">,</span> <span class=\"n\">titleFile</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">TitleFile:&quot;</span><span class=\"p\">,</span> <span class=\"n\">titleFile</span><span class=\"p\">,</span> <span class=\"s2\">&quot; DOSE NOT EXISITS!!!, Please make sure that all qcLocation have title file</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"n\">HSmetricsFile</span> <span class=\"o\">=</span> <span class=\"n\">qclocation</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/*.HSmetrics.txt&quot;</span>\n    <span class=\"n\">HSmetricsFileList</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">HSmetricsFile</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">AllHSmetricsFiles:</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"k\">for</span> <span class=\"nb\">file</span> <span class=\"ow\">in</span> <span class=\"n\">HSmetricsFileList</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                <span class=\"k\">print</span><span class=\"s2\">&quot;</span><span class=\"se\">\\t\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Does Not Exist!!!, Please make sure qcLocation have all HSmetrics.txt files</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"n\">bamFile</span> <span class=\"o\">=</span> <span class=\"n\">bamlocation</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/*.bam&quot;</span>\n    <span class=\"n\">bamFileList</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">bamFile</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">AllBamFiles:</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"k\">for</span> <span class=\"nb\">file</span> <span class=\"ow\">in</span> <span class=\"n\">bamFileList</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                <span class=\"k\">print</span><span class=\"s2\">&quot;</span><span class=\"se\">\\t\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                <span class=\"k\">print</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Does Not Exist!!!, Please make sure bamLocation have all bam files</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n    <span class=\"n\">outdir</span> <span class=\"o\">=</span> <span class=\"n\">poolName</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">outdir</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">outDir</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">outdir</span>\n    <span class=\"k\">return</span><span class=\"p\">(</span><span class=\"n\">titleFile</span><span class=\"p\">,</span> <span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"n\">HSmetricsFileList</span><span class=\"p\">,</span> <span class=\"n\">bamFileList</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RunPerPool\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.RunPerPool\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">RunPerPool</span><span class=\"p\">(</span><span class=\"n\">titleFile</span><span class=\"p\">,</span> <span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"n\">HSmetricsFileList</span><span class=\"p\">,</span> <span class=\"n\">bamFileList</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;This will run the pool to be analyzed.</span>\n\n\n<span class=\"sd\">    :param str titleFile: str of meta information file</span>\n<span class=\"sd\">    :param str outdir: str of output directory</span>\n<span class=\"sd\">    :param list HSmetricsFileList: list of picard hsmetrics files</span>\n<span class=\"sd\">    :param list bamFileList: list of bam files</span>\n<span class=\"sd\">    :param Namespace args: Namespace of args to get other variables</span>\n<span class=\"sd\">    :return: None</span>\n<span class=\"sd\">    :rtype: None</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Run Preprocess</span>\n    <span class=\"n\">titleFileDF</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">titleFile</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">keep_default_na</span><span class=\"o\">=</span><span class=\"s1\">&#39;True&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">groupByPatientId</span> <span class=\"o\">=</span> <span class=\"n\">titleFileDF</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s1\">&#39;Patient_ID&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">baseNames</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">poolidRegXcompile</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s1\">&#39;.*[PoolNormal|PooledNormal].*&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">poolHsmetricsFile</span> <span class=\"o\">=</span> <span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">poolidRegXcompile</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">HSmetricsFileList</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n    <span class=\"n\">poolbamFile</span> <span class=\"o\">=</span> <span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">poolidRegXcompile</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">bamFileList</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">patientID</span><span class=\"p\">,</span> <span class=\"n\">group</span> <span class=\"ow\">in</span> <span class=\"n\">groupByPatientId</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"n\">patientID</span><span class=\"p\">,</span> <span class=\"s2\">&quot;:&quot;</span>\n        <span class=\"n\">tsampleId</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n        <span class=\"n\">tBamFile</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n        <span class=\"n\">nBamFile</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n        <span class=\"n\">basename</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n        <span class=\"n\">nsampleId</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                <span class=\"k\">print</span> <span class=\"s2\">&quot;Pool Output Dir:&quot;</span><span class=\"p\">,</span> <span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;exists!!!&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">)</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">o755</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">iterrows</span><span class=\"p\">():</span>\n            <span class=\"n\">sampleId</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">&#39;Sample_ID&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">patientId</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">&#39;Patient_ID&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">sampleClass</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">&#39;Class&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">idRegXcompile</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s1\">&#39;.*&#39;</span> <span class=\"o\">+</span> <span class=\"n\">sampleId</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.*&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">sampleClass</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Tumor&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">basename</span> <span class=\"o\">=</span> <span class=\"n\">sampleId</span>\n                <span class=\"n\">tBamFile</span> <span class=\"o\">=</span> <span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">idRegXcompile</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">bamFileList</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">symlink</span><span class=\"p\">(</span><span class=\"n\">tBamFile</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">tBamFile</span><span class=\"p\">)))</span>\n                <span class=\"n\">tBamFile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">tBamFile</span><span class=\"p\">))</span>\n                <span class=\"n\">tsampleId</span> <span class=\"o\">=</span> <span class=\"n\">sampleId</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">sampleClass</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Normal&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">nBamFile</span> <span class=\"o\">=</span> <span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">idRegXcompile</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">bamFileList</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">symlink</span><span class=\"p\">(</span><span class=\"n\">nBamFile</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">nBamFile</span><span class=\"p\">)))</span>\n                <span class=\"n\">nBamFile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">nBamFile</span><span class=\"p\">))</span>\n                <span class=\"n\">nsampleId</span> <span class=\"o\">=</span> <span class=\"n\">sampleId</span>\n                <span class=\"n\">nHSmetricsFile</span> <span class=\"o\">=</span> <span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">idRegXcompile</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">HSmetricsFileList</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n                <span class=\"p\">(</span><span class=\"n\">decision</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">SelectNormal</span><span class=\"p\">(</span><span class=\"n\">nHSmetricsFile</span><span class=\"p\">,</span> <span class=\"n\">poolHsmetricsFile</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">decision</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;UnMatched&#39;</span><span class=\"p\">):</span>\n                    <span class=\"n\">nBamFile</span> <span class=\"o\">=</span> <span class=\"n\">poolbamFile</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">):</span>\n                        <span class=\"k\">print</span> <span class=\"s2\">&quot;Matched Sample</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">tBamFile</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">nBamFile</span><span class=\"p\">))):</span>\n            <span class=\"n\">jobId</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;iCallSV_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">basename</span><span class=\"p\">)</span>\n            <span class=\"n\">cmdList</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">python</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">icsv</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -sc &quot;</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">conf</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -bbam &quot;</span> <span class=\"o\">+</span> <span class=\"n\">nBamFile</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -abam &quot;</span> <span class=\"o\">+</span> \\\n                <span class=\"n\">tBamFile</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -aId &quot;</span> <span class=\"o\">+</span> <span class=\"n\">tsampleId</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -bId &quot;</span> <span class=\"o\">+</span> <span class=\"n\">nsampleId</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -op &quot;</span> <span class=\"o\">+</span> <span class=\"n\">tsampleId</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -o &quot;</span> <span class=\"o\">+</span> <span class=\"n\">outdir</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -v&quot;</span>\n            <span class=\"c1\"># cmd = str(cmd)</span>\n            <span class=\"n\">threads</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">threads</span><span class=\"p\">)</span>\n            <span class=\"n\">threads</span> <span class=\"o\">=</span> <span class=\"n\">threads</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n            <span class=\"n\">qsub_cmd</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">qsub</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -q &quot;</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">queue</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -N &quot;</span> <span class=\"o\">+</span> <span class=\"n\">jobId</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -o &quot;</span> <span class=\"o\">+</span> <span class=\"n\">jobId</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.stdout&quot;</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -e &quot;</span> <span class=\"o\">+</span> <span class=\"n\">jobId</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.stderr&quot;</span> <span class=\"o\">+</span> \\\n                <span class=\"s2\">&quot; -V -l h_vmem=6G,virtual_free=6G -pe smp &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">threads</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -wd &quot;</span> <span class=\"o\">+</span> <span class=\"n\">outdir</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -sync y &quot;</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; -b y &quot;</span> <span class=\"o\">+</span> <span class=\"n\">cmd</span>\n            <span class=\"k\">print</span> <span class=\"s2\">&quot;qsub_cmd:&quot;</span><span class=\"p\">,</span> <span class=\"n\">qsub_cmd</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">cmdList</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">qsub_cmd</span><span class=\"p\">)</span>\n            <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">Job</span><span class=\"p\">(</span>\n                <span class=\"n\">RunJob</span><span class=\"p\">,</span>\n                <span class=\"n\">cmdList</span><span class=\"p\">,</span>\n                <span class=\"n\">kwlist</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">cleanup</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">mem_free</span><span class=\"o\">=</span><span class=\"s2\">&quot;2G&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">jobId</span><span class=\"p\">,</span>\n                <span class=\"n\">num_slots</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"n\">queue</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">)</span>\n            <span class=\"n\">jobs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;sending function jobs to cluster&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">job_outputs</span> <span class=\"o\">=</span> <span class=\"n\">process_jobs</span><span class=\"p\">(</span>\n        <span class=\"n\">jobs</span><span class=\"p\">,</span>\n        <span class=\"n\">max_processes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">temp_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;/dmp/analysis/SCRATCH/&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">white_list</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">local</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;results from each job&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">job_outputs</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Job {0}- result: {1}&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">))</span>\n\n    <span class=\"k\">return</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RunJob\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.RunJob\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">RunJob</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Given a command run the job.</span>\n\n\n<span class=\"sd\">    :param str cmd: str of command to be run on the local machine</span>\n<span class=\"sd\">    :return: None</span>\n<span class=\"sd\">    :rtype: None</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n    <span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"n\">Popen</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n    <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">returncode</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">retcode</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;I have finished running process using SGE&quot;</span></div>\n\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">    #iterate over jobs and put each into the queue in sequence</span>\n<span class=\"sd\">    for job in jobs:</span>\n<span class=\"sd\">        print &quot;inserting job into the queue: %s&quot;%(job)</span>\n<span class=\"sd\">        jobqueue.put(job)</span>\n<span class=\"sd\">    #start some threads, each one will process one job from the queue#</span>\n<span class=\"sd\">    for i in range(mp.cpu_count()-1):</span>\n<span class=\"sd\">        th = Thread(target=processor,args = (i,jobqueue))</span>\n<span class=\"sd\">        th.setDaemon(True)</span>\n<span class=\"sd\">        th.start()</span>\n<span class=\"sd\">    #wait until all jobs are processed before quitting</span>\n<span class=\"sd\">    jobqueue.join()</span>\n<span class=\"sd\">    with jobqueue.mutex:</span>\n<span class=\"sd\">        jobqueue.queue.clear()</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n\n\n<div class=\"viewcode-block\" id=\"SelectNormal\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.SelectNormal\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">SelectNormal</span><span class=\"p\">(</span><span class=\"n\">normal</span><span class=\"p\">,</span> <span class=\"n\">poolnormal</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Select the best possible normal.</span>\n\n<span class=\"sd\">    :param str normal: str of match normal</span>\n<span class=\"sd\">    :param str poolnormal: str of pool normal</span>\n<span class=\"sd\">    :return: str with decision whether to run matched or unmatched</span>\n<span class=\"sd\">    :rtype: str</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">filesToProcess</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">normal</span><span class=\"p\">,</span> <span class=\"n\">poolnormal</span><span class=\"p\">]</span>\n    <span class=\"n\">fcount</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">coveragePerFile</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">covgIndex</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">decision</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n    <span class=\"k\">for</span> <span class=\"nb\">file</span> <span class=\"ow\">in</span> <span class=\"n\">filesToProcess</span><span class=\"p\">:</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">filecontent</span><span class=\"p\">:</span>\n            <span class=\"n\">coverageForSample</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">linecount</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">filecontent</span><span class=\"p\">:</span>\n                <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;#&quot;</span><span class=\"p\">):</span>\n                        <span class=\"n\">linecount</span> <span class=\"o\">=</span> <span class=\"n\">linecount</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n                        <span class=\"k\">continue</span>\n                    <span class=\"c1\"># print linecount,line</span>\n                    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">fcount</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n                        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;BAIT_SET&quot;</span><span class=\"p\">):</span>\n                            <span class=\"k\">for</span> <span class=\"n\">content</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n                                <span class=\"c1\"># print linecount,content ,&quot;C\\n&quot;</span>\n                                <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">content</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;MEAN_TARGET_COVERAGE&#39;</span><span class=\"p\">):</span>\n                                    <span class=\"n\">covgIndex</span> <span class=\"o\">=</span> <span class=\"n\">covgIndex</span>\n                                    <span class=\"c1\"># print covgIndex,&quot;CI\\n&quot;</span>\n                                    <span class=\"k\">break</span>\n                                <span class=\"k\">else</span><span class=\"p\">:</span>\n                                    <span class=\"n\">covgIndex</span> <span class=\"o\">=</span> <span class=\"n\">covgIndex</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"c1\"># print fcount,covgIndex,data,&quot;Inside\\n&quot;</span>\n                            <span class=\"n\">coverageForSample</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">covgIndex</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">fcount</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n                        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;BAIT_SET&quot;</span><span class=\"p\">):</span>\n                            <span class=\"k\">continue</span>\n                        <span class=\"c1\"># print fcount,covgIndex,data,&quot;All\\n&quot;</span>\n                        <span class=\"n\">coverageForSample</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">covgIndex</span><span class=\"p\">]</span>\n                    <span class=\"n\">linecount</span> <span class=\"o\">=</span> <span class=\"n\">linecount</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n        <span class=\"n\">fcount</span> <span class=\"o\">=</span> <span class=\"n\">fcount</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n        <span class=\"n\">coveragePerFile</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">coverageForSample</span><span class=\"p\">)</span>\n    <span class=\"n\">mnormalCovg</span> <span class=\"o\">=</span> <span class=\"n\">coveragePerFile</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">umnormalCovg</span> <span class=\"o\">=</span> <span class=\"n\">coveragePerFile</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">mnormalCovg</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mf\">50.0</span><span class=\"p\">):</span>\n        <span class=\"n\">decision</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Matched&#39;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">decision</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;UnMatched&#39;</span>\n    <span class=\"k\">return</span><span class=\"p\">(</span><span class=\"n\">decision</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"getSubDirs\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.getSubDirs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">getSubDirs</span><span class=\"p\">(</span><span class=\"n\">dirLocation</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Get all sub directories.</span>\n\n\n<span class=\"sd\">    :param str dirLocation: str of directory location</span>\n<span class=\"sd\">    :return: list of all sub directories</span>\n<span class=\"sd\">    :rtype: list</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dirs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">dirLocation</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">):</span>\n            <span class=\"n\">dirs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span><span class=\"p\">(</span><span class=\"n\">dirs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"processor\"><a class=\"viewcode-back\" href=\"../../../source/iCallSV/#iCallSV.iCallSV_dmp_wrapper.processor\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">processor</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">jobqueue</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Operate on a jobqueue.</span>\n\n\n<span class=\"sd\">    :param int i: count of the job</span>\n<span class=\"sd\">    :param Namespace jobqueue: Namespace for jobqueue</span>\n<span class=\"sd\">    :return: None</span>\n<span class=\"sd\">    :rtype: None</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">devnull</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;/dev/null&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">jobqueue</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">():</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;the Queue is empty!&quot;</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">jobqueue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;I&#39;m operating on job item: </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">job</span>\n        <span class=\"n\">qsub_args</span> <span class=\"o\">=</span> <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">Popen</span><span class=\"p\">(</span><span class=\"n\">qsub_args</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"n\">PIPE</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"n\">devnull</span><span class=\"p\">)</span>\n        <span class=\"n\">jobqueue</span><span class=\"o\">.</span><span class=\"n\">task_done</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"s2\">&quot;Failed to operate on job</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span></div>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"c1\"># mp.freeze_support()</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n    <span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Elapsed time was </span><span class=\"si\">%g</span><span class=\"s2\"> seconds&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">end_time</span> <span class=\"o\">-</span> <span class=\"n\">start_time</span><span class=\"p\">))</span>\n</pre></div>", "title": "iCallSV.iCallSV_dmp_wrapper", "customsidebar": null, "current_page_name": "_modules/iCallSV/iCallSV_dmp_wrapper", "sidebars": null, "parents": [{"link": "../../", "title": "Module code"}], "alabaster_version": "0.7.7"}